{
    "sourceFile": "src/components/FileUpload/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1652353571463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1652353582759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import firebase from \"firebase\";\n import \"../../../node_modules/bootstrap/dist/css/bootstrap.css\";\n import \"../UpdateVideoInfo/style.css\";\n import Bar from \"../Bar\";\n+import { useCategories } from \"../App\";\n \n const styles = (theme) => ({\n     main: {\n         width: \"auto\",\n@@ -62,9 +63,9 @@\n     const [inputTag, setInputTag] = useState(\"\");\n     const [isKeyReleased, setIsKeyReleased] = useState(false);\n     const [duration, setDuration] = useState(\"\");\n \n-    const categoryArray = useCategories\n+    const categoryArray = useCategories();\n \n     if (!getCurrentUsername) {\n         // not logged in\n         alert(\"Please login first\");\n"
                }
            ],
            "date": 1652353571463,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport { Typography, Paper, Avatar, Button, LinearProgress } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../UpdateVideoInfo/style.css\";\nimport Bar from \"../Bar\";\n\nconst styles = (theme) => ({\n    main: {\n        width: \"auto\",\n        display: \"block\", // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            width: 600,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n            theme.spacing.unit * 3\n        }px`,\n        backgroundColor: \"#210548\",\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n    },\n\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nfunction FileUpload(props) {\n    const { classes } = props;\n\n    const [file, setFile] = useState(\"\");\n    const [url, setUrl] = useState(\"\");\n    const [previewUrl, setPreviewUrl] = useState(\"\");\n    const [process, setProcess] = useState(0);\n    const [uploadStatus, setUploadStatus] = useState(false);\n    const [category, setCategory] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    const [preview, setPreview] = useState(\"\");\n    const [tags, setTags] = useState([]);\n    const [inputTag, setInputTag] = useState(\"\");\n    const [isKeyReleased, setIsKeyReleased] = useState(false);\n    const [duration, setDuration] = useState(\"\");\n\n    const categoryArray = useCategories\n\n    if (!getCurrentUsername) {\n        // not logged in\n        alert(\"Please login first\");\n        props.history.replace(\"/login\");\n        return null;\n    }\n\n    return (\n        <div className={classes.main}>\n            <Bar></Bar>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" style={{ color: \"white\" }}>\n                    上傳文件\n                </Typography>\n                <form\n                    className={classes.form}\n                    onSubmit={(e) => e.preventDefault() && false}\n                >\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <label className=\"form-label\" style={{ color: \"white\" }}>\n                                標題\n                            </label>\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                onChange={(e) => setFileName(e.target.value)}\n                            ></input>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"form-group\">\n                                <label\n                                    className=\"form-label\"\n                                    style={{ color: \"white\", paddingTop: \"15px\" }}\n                                >\n                                    類別\n                                </label>\n                                <select\n                                    className=\"form-select\"\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                    {categoryArray.map(function (value, index) {\n                                        return <option>{value}</option>;\n                                    })}\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"tags\" style={{ color: \"white\" }}>\n                                    Tags\n                                </label>\n\n                                {tags.map(function (value, index) {\n                                    return (\n                                        <div className=\"tag\">\n                                            {value}\n                                            <button onClick={() => deleteTag(index)}>\n                                                x\n                                            </button>\n                                        </div>\n                                    );\n                                })}\n                                <input\n                                    className=\"form-control\"\n                                    id=\"tags\"\n                                    type=\"text\"\n                                    value={inputTag}\n                                    onKeyDown={(e) => onKeyDown(e)}\n                                    onKeyUp={onKeyUp}\n                                    onChange={(e) => handleTextFieldInput(e)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"form-group\">\n                                <label className=\"form-label\" style={{ color: \"white\" }}>\n                                    影片文件\n                                </label>\n                                <input\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setFile(e.target.files[0]);\n                                    }}\n                                ></input>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"form-group\">\n                                <label className=\"form-label\" style={{ color: \"white\" }}>\n                                    預覽圖\n                                </label>\n                                <input\n                                    type=\"file\"\n                                    accept=\"image/png, image/jpg, image/gif\"\n                                    className=\"form-control\"\n                                    onChange={(e) => {\n                                        setPreview(e.target.files[0]);\n                                    }}\n                                ></input>\n                            </div>\n                        </div>\n                    </div>\n                    {uploadStatus && (\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <LinearProgress variant=\"determinate\" value={process} />\n                            </div>\n                        </div>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={uploadFile}\n                        className={classes.submit}\n                    >\n                        上傳\n                    </Button>\n                </form>\n            </Paper>\n        </div>\n    );\n\n    async function uploadFile() {\n        if (file == null) return;\n\n        setUploadStatus(true);\n        const storage = firebase.storage();\n        const storageRef = storage.ref();\n        let previewUrl;\n        if (preview != null) {\n            const uploadPreview = storageRef\n                .child(\"preview/\" + preview.name)\n                .put(preview);\n            await uploadPreview.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress =\n                        Math.round(snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    console.log(process);\n                    setProcess(progress);\n                },\n                (error) => {},\n                () => {\n                    uploadPreview.snapshot.ref.getDownloadURL().then((url) => {\n                        console.log(url);\n                        previewUrl = url;\n                    });\n                }\n            );\n        }\n        const uploadTask = storageRef.child(\"folder/\" + file.name).put(file);\n\n        uploadTask.on(\n            firebase.storage.TaskEvent.STATE_CHANGED,\n            (snapshot) => {\n                const progress =\n                    Math.round(snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log(progress);\n                setProcess(progress);\n            },\n            (error) => {\n                throw error;\n            },\n            () => {\n                uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n                    setUrl(url);\n\n                    const timestamp = new Date().toISOString();\n                    const unix = Math.round(new Date() / 1000000000);\n                    const randomDigit = (\n                        Math.floor(Math.random() * 90000) + 10000\n                    ).toString();\n                    const videoID = unix + randomDigit;\n                    console.log({ previewUrl });\n                    firebase.database().ref(\"VideoList/\").push({\n                        url: url,\n                        category: category,\n                        timestamp: timestamp,\n                        fileName: fileName,\n                        tag: tags,\n                        duration: duration,\n                        previewUrl: previewUrl,\n                        id: videoID,\n                    });\n                });\n                alert(\"成功上傳\");\n\n                setCategory(\"\");\n                setFile(\"\");\n                setFileName(\"\");\n                setPreview(\"\");\n                setTags([]);\n                setUploadStatus(false);\n            }\n        );\n    }\n\n    function getCurrentUsername() {\n        return firebase.auth().currentUser && firebase.auth().currentUser.displayName;\n    }\n\n    function handleTextFieldInput(e) {\n        const inputTag = e.target.value;\n        setInputTag(inputTag);\n    }\n\n    function onKeyDown(e) {\n        const { key } = e;\n        const trimmedInput = inputTag.trim();\n\n        if (key === \" \" && trimmedInput.length && !tags.includes(trimmedInput)) {\n            e.preventDefault();\n            setTags((prevState) => [...prevState, trimmedInput]);\n            setInputTag(\"\");\n        }\n\n        if (key === \"Backspace\" && !inputTag.length && tags.length) {\n            e.preventDefault();\n            const tagsCopy = [...tags];\n            const poppedTag = tagsCopy.pop();\n\n            setTags(tagsCopy);\n            setInputTag(poppedTag);\n        }\n\n        setIsKeyReleased(false);\n    }\n\n    function onKeyUp() {\n        setIsKeyReleased(true);\n    }\n\n    function deleteTag(index) {\n        setTags((prevState) => prevState.filter((tag, i) => i !== index));\n    }\n}\n\nexport default withRouter(withStyles(styles)(FileUpload));\n"
        }
    ]
}